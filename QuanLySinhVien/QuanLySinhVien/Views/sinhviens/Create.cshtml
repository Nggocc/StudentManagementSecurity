@model QuanLySinhVien.Models.sinhvien
@using QuanLySinhVien.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<script src="~/Scripts/jquery-3.4.1.min.js"></script>*@
<h2>Nhập thông tin sinh viên</h2>

@if (ViewBag.Error != null)
{
    if (ViewBag.Error == "Thêm mới thành công")
    {
        <div class="alert alert-danger" style="color: forestgreen !important; background-color: greenyellow !important">@ViewBag.Error</div>
    }
    <div class="alert alert-danger">@ViewBag.Error</div>

}


@using (Html.BeginForm("Create", "sinhviens", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        <table style="width:650px" class="table">
            @*<tr>
                    <td>Mã sinh viên</td>
                    <td>
                        @Html.HiddenFor(model => model.maSV)
                        @{
                            DBContext db = new DBContext();
                            var lastStudent = db.sinhviens.OrderByDescending(s => s.maSV).FirstOrDefault();
                            int newStudentId = lastStudent != null ? lastStudent.maSV + 1 : 1;
                        }
                        <input type="number" value="@newStudentId" name="maSV"/>
                        @Html.ValidationMessageFor(model => model.maSV, "", new { @class = "text-danger" })
                    </td>
                </tr>*@
            <tr>
                <td>Mã lớp</td>
                <td>
                    @Html.DropDownList("maLop", @ViewBag.maLop as SelectList, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.maLop, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Họ tên</td>
                <td>
                    @Html.EditorFor(model => model.hoTen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.hoTen, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Địa chỉ</td>
                <td>
                    @Html.EditorFor(model => model.diachi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.diachi, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>SĐT</td>
                <td>
                    @Html.EditorFor(model => model.sdt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sdt, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Email</td>
                <td>
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Điểm tx1</td>
                <td>
                    @Html.EditorFor(model => model.diemTX1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.diemTX1, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Điểm tx2</td>
                <td>
                    @Html.EditorFor(model => model.diemXT2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.diemXT2, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Điểm thi</td>
                <td>
                    @Html.EditorFor(model => model.diemThi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.diemThi, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Ảnh</td>
                <td>
                    @{
                        string path = "~/Content/Images/noImage.jpg";
                    }
                    <img id="output" class="img-round" alt="ảnh" width="180" src="@Url.Content(path)" />
                    <p>
                        <label for="ufile" style="cursor: pointer">Chọn file ảnh</label>
                    </p>
                    <input name="ImageFile" id="ufile" type="file" style="display: none" onchange="loadFile(event)" />
                </td>
            </tr>
            <tr>
                <td colspan="2" style="border: none">
                    <input type="submit" id="save" value="Lưu thông tin" class="btn" role="button" style="background-color: #0FC2C2; font-weight:bold; color: white; border-radius:30px; height:50px; width:200px; float: right" />

                </td>
            </tr>
        </table>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var loadFile = function (event) {
        var image = document.getElementById("output");
        image.src = URL.createObjectURL(event.target.files[0]);
    };
</script>
